{
  "type": "control-flow",
  "appVersion": "1.21.0",
  "properties": {
    "meta": {
      "comment": {
        "markdown": {
          "text": {
            "text": "",
            "syntax": "markdown",
            "size": {
              "width": "100%",
              "height": "100%"
            }
          },
          "size": {
            "width": null,
            "height": 160
          },
          "view": "edit"
        },
        "editor": {
          "collapsed": true
        }
      },
      "showingComment": true
    },
    "editor": {
      "showParameters": true,
      "showVariables": true,
      "showServices": true,
      "dialogWidth": "wide"
    },
    "imports": {
      "code": "# import the standard library\n# import core, data, strings, time, math, fun, locale, regex, bin, decimals from 'std';\n",
      "size": {
        "width": 0,
        "height": 102
      },
      "editor": {
        "collapsed": false
      }
    },
    "parameters": {
      "parameters": {
        "list": [
          {
            "name": "clearAndLoadDatabase",
            "description": "If the data should be wiped and then imported to the database",
            "type": "boolean",
            "defaultValue": {
              "widgetType": "expression/checkbox-boolean",
              "widgetData": {
                "value": false
              },
              "code": "false"
            }
          },
          {
            "name": "createCsvFiles",
            "description": "If the csv data files should be generated",
            "type": "boolean",
            "defaultValue": {
              "widgetType": "expression/checkbox-boolean",
              "widgetData": {
                "value": false
              },
              "code": "false"
            }
          }
        ]
      },
      "editor": {
        "collapsed": false
      }
    },
    "variables": {
      "variables": {
        "list": [
          {
            "name": "rootFolder",
            "type": "any",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.vars.rootFolder",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.vars.rootFolder"
            }
          },
          {
            "name": "geonamesFolder",
            "type": "any",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.vars.geonamesFolder",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.vars.geonamesFolder"
            }
          },
          {
            "name": "allCountriesFile",
            "type": "any",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.vars.allCountriesFile",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.vars.allCountriesFile"
            }
          },
          {
            "name": "featureClassesFile",
            "type": "any",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.vars.featureClassesFile",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.vars.featureClassesFile"
            }
          },
          {
            "name": "featureCodesFile",
            "type": "any",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.vars.featureCodesFile",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.vars.featureCodesFile"
            }
          },
          {
            "name": "dataOutputFolder",
            "type": "any",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.vars.dataOutputFolder",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.vars.dataOutputFolder"
            }
          },
          {
            "name": "geonamesDatabase",
            "type": "any",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.vars.geonamesDatabase",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.vars.geonamesDatabase"
            }
          }
        ]
      },
      "editor": {
        "collapsed": false
      }
    },
    "services": {
      "services": {
        "list": [
          {
            "name": "sqlite-geonames",
            "type": "any",
            "category": "jdbc",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "$config.services.`sqlite-geonames`",
                "size": {
                  "width": 0,
                  "height": 36
                },
                "syntax": "tweakflow"
              },
              "code": "$config.services.`sqlite-geonames`"
            }
          }
        ]
      },
      "editor": {
        "collapsed": false
      }
    }
  },
  "steps": [
    {
      "id": "start",
      "name": "Start",
      "type": "com.twineworks.tweakstreet.library.steps.start.start",
      "data": {
        "meta": {
          "name": "Start"
        }
      },
      "wirelessInputs": false,
      "pos": {
        "x": 106,
        "y": 170
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.runflow_25f04566-1942-4b79-a471-0666383cd165",
      "name": "Run Flow: load database",
      "type": "com.twineworks.tweakstreet.library.steps.map.runflow",
      "data": {
        "meta": {
          "name": "Run Flow: load database",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "flowPath": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "./load_database.dfl",
            "dialogIntent": "openFile"
          },
          "code": "'./load_database.dfl'"
        },
        "params": {
          "widgetType": "expression/dict",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "{}"
        },
        "propagateErrors": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "success",
                "type": "boolean",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.flow_success"
                  },
                  "code": "::results.flow_success"
                }
              },
              {
                "name": "result",
                "type": "any",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.flow_result"
                  },
                  "code": "::results.flow_result"
                }
              },
              {
                "name": "error",
                "type": "any",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.flow_error"
                  },
                  "code": "::results.flow_error"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "wirelessInputs": false,
      "pos": {
        "x": 1098,
        "y": 330
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.runflow_9a9f1d1e-f53a-4663-8a50-3a28bef6c612",
      "name": "Run Flow: create node files",
      "type": "com.twineworks.tweakstreet.library.steps.map.runflow",
      "data": {
        "meta": {
          "name": "Run Flow: create node files",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "flowPath": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "./create_node_files.dfl",
            "dialogIntent": "openFile"
          },
          "code": "'./create_node_files.dfl'"
        },
        "params": {
          "widgetType": "expression/dict",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "{}"
        },
        "propagateErrors": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "success",
                "type": "boolean",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.flow_success"
                  },
                  "code": "::results.flow_success"
                }
              },
              {
                "name": "result",
                "type": "any",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.flow_result"
                  },
                  "code": "::results.flow_result"
                }
              },
              {
                "name": "error",
                "type": "any",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.flow_error"
                  },
                  "code": "::results.flow_error"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "wirelessInputs": false,
      "pos": {
        "x": 1402,
        "y": 170
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.runflow_e1b21047-2cee-4113-9758-a9cdcb9665af",
      "name": "Run Flow: create relation files",
      "type": "com.twineworks.tweakstreet.library.steps.map.runflow",
      "data": {
        "meta": {
          "name": "Run Flow: create relation files",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "flowPath": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "./create_relation_files.dfl",
            "dialogIntent": "openFile"
          },
          "code": "'./create_relation_files.dfl'"
        },
        "params": {
          "widgetType": "expression/dict",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "{}"
        },
        "propagateErrors": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "success",
                "type": "boolean",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.flow_success"
                  },
                  "code": "::results.flow_success"
                }
              },
              {
                "name": "result",
                "type": "any",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.flow_result"
                  },
                  "code": "::results.flow_result"
                }
              },
              {
                "name": "error",
                "type": "any",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.flow_error"
                  },
                  "code": "::results.flow_error"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "wirelessInputs": false,
      "pos": {
        "x": 1674,
        "y": 170
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.end.finish_35713ec1-af4c-47dc-8d37-196d9c868227",
      "name": "Finish",
      "type": "com.twineworks.tweakstreet.library.steps.end.finish",
      "data": {
        "meta": {
          "name": "Finish",
          "comment": {
            "markdown": {
              "text": {
                "text": ""
              },
              "size": {
                "width": null,
                "height": 160
              },
              "editor": {
                "collapsed": true
              }
            }
          },
          "showingComment": false
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "result": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "row"
          },
          "code": "row"
        },
        "editor": {
          "showEntryVariables": false
        }
      },
      "wirelessInputs": false,
      "pos": {
        "x": 1674,
        "y": 330
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.sqlscript_a8f0f1c7-f156-4094-a011-3be68ae9f6bb",
      "name": "SQL Script: create all tables",
      "type": "com.twineworks.tweakstreet.library.steps.map.sqlscript",
      "data": {
        "meta": {
          "name": "SQL Script: create all tables",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "connection": {
          "widgetType": "expression/database-ref",
          "widgetData": {
            "name": "sqlite-geonames"
          },
          "code": "::flow.services.`sqlite-geonames`"
        },
        "sql": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": [
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "CREATE TABLE if not exists geoname (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(200),\n  asciiname VARCHAR(200),\n  latitude DECIMAL(10,2),\n  longitude DECIMAL(10,2),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  country_code VARCHAR(2),\n  cc2 VARCHAR(200),\n  admin1_code VARCHAR(20),\n  admin2_code VARCHAR(20),\n  admin3_code VARCHAR(20),\n  admin4_code VARCHAR(20),\n  admin5_code VARCHAR(20),\n  population INTEGER,\n  elevation INTEGER,\n  dem INTEGER,\n  timezone VARCHAR(40),\n  modification_date TIMESTAMP\n)",
                      "size": {
                        "width": 0,
                        "height": 434
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'CREATE TABLE if not exists geoname (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(200),\n  asciiname VARCHAR(200),\n  latitude DECIMAL(10,2),\n  longitude DECIMAL(10,2),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  country_code VARCHAR(2),\n  cc2 VARCHAR(200),\n  admin1_code VARCHAR(20),\n  admin2_code VARCHAR(20),\n  admin3_code VARCHAR(20),\n  admin4_code VARCHAR(20),\n  admin5_code VARCHAR(20),\n  population INTEGER,\n  elevation INTEGER,\n  dem INTEGER,\n  timezone VARCHAR(40),\n  modification_date TIMESTAMP\n)'"
                  }
                },
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "CREATE TABLE if not exists country (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(200),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  country_code VARCHAR(2),\n  continent_code VARCHAR(2),\n  population INTEGER,\n  modification_date TIMESTAMP\n)",
                      "size": {
                        "width": 0,
                        "height": 224
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'CREATE TABLE if not exists country (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(200),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  country_code VARCHAR(2),\n  continent_code VARCHAR(2),\n  population INTEGER,\n  modification_date TIMESTAMP\n)'"
                  }
                },
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "CREATE TABLE if not exists continent (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(40),\n  code VARCHAR(2),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  population INTEGER,\n  modification_date TIMESTAMP\n)",
                      "size": {
                        "width": 0,
                        "height": 200
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'CREATE TABLE if not exists continent (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(40),\n  code VARCHAR(2),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  population INTEGER,\n  modification_date TIMESTAMP\n)'"
                  }
                },
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "CREATE TABLE if not exists admindivision (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(80),\n  latitude DECIMAL(10,2),\n  longitude DECIMAL(10,2),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  country_code VARCHAR(2),\n  admin1_code VARCHAR(20),\n  admin2_code VARCHAR(80),\n  admin3_code VARCHAR(20),\n  admin4_code VARCHAR(20),\n  admin5_code VARCHAR(20),\n  population INTEGER,\n  modification_date TIMESTAMP\n)",
                      "size": {
                        "width": 0,
                        "height": 200
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'CREATE TABLE if not exists admindivision (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(80),\n  latitude DECIMAL(10,2),\n  longitude DECIMAL(10,2),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  country_code VARCHAR(2),\n  admin1_code VARCHAR(20),\n  admin2_code VARCHAR(80),\n  admin3_code VARCHAR(20),\n  admin4_code VARCHAR(20),\n  admin5_code VARCHAR(20),\n  population INTEGER,\n  modification_date TIMESTAMP\n)'"
                  }
                },
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "CREATE TABLE if not exists feature (\n  generated_id INTEGER NOT NULL PRIMARY KEY,\n  class_code VARCHAR(22) NOT NULL,\n  name VARCHAR(200),\n  description VARCHAR(200),\n  class VARCHAR(1),\n  code VARCHAR(20),\n  class_description VARCHAR(200)\n)",
                      "size": {
                        "width": 0,
                        "height": 200
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'CREATE TABLE if not exists feature (\n  generated_id INTEGER NOT NULL PRIMARY KEY,\n  class_code VARCHAR(22) NOT NULL,\n  name VARCHAR(200),\n  description VARCHAR(200),\n  class VARCHAR(1),\n  code VARCHAR(20),\n  class_description VARCHAR(200)\n)'"
                  }
                }
              ]
            }
          },
          "code": "['CREATE TABLE if not exists geoname (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(200),\n  asciiname VARCHAR(200),\n  latitude DECIMAL(10,2),\n  longitude DECIMAL(10,2),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  country_code VARCHAR(2),\n  cc2 VARCHAR(200),\n  admin1_code VARCHAR(20),\n  admin2_code VARCHAR(20),\n  admin3_code VARCHAR(20),\n  admin4_code VARCHAR(20),\n  admin5_code VARCHAR(20),\n  population INTEGER,\n  elevation INTEGER,\n  dem INTEGER,\n  timezone VARCHAR(40),\n  modification_date TIMESTAMP\n)', 'CREATE TABLE if not exists country (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(200),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  country_code VARCHAR(2),\n  continent_code VARCHAR(2),\n  population INTEGER,\n  modification_date TIMESTAMP\n)', 'CREATE TABLE if not exists continent (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(40),\n  code VARCHAR(2),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  population INTEGER,\n  modification_date TIMESTAMP\n)', 'CREATE TABLE if not exists admindivision (\n  geonameid INTEGER NOT NULL PRIMARY KEY,\n  name VARCHAR(80),\n  latitude DECIMAL(10,2),\n  longitude DECIMAL(10,2),\n  feature_class VARCHAR(1),\n  feature_code VARCHAR(10),\n  country_code VARCHAR(2),\n  admin1_code VARCHAR(20),\n  admin2_code VARCHAR(80),\n  admin3_code VARCHAR(20),\n  admin4_code VARCHAR(20),\n  admin5_code VARCHAR(20),\n  population INTEGER,\n  modification_date TIMESTAMP\n)', 'CREATE TABLE if not exists feature (\n  generated_id INTEGER NOT NULL PRIMARY KEY,\n  class_code VARCHAR(22) NOT NULL,\n  name VARCHAR(200),\n  description VARCHAR(200),\n  class VARCHAR(1),\n  code VARCHAR(20),\n  class_description VARCHAR(200)\n)']"
        },
        "jdbcParams": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "getGeneratedKeys": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "onSqlErrors": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "com.twineworks.tweakstreet.library.steps.map.sqlscript/onSqlErrors",
            "value": "error"
          },
          "code": "'error'"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "wirelessInputs": false,
      "pos": {
        "x": 522,
        "y": 170
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.decision.decision_45679345-687f-446d-bb2b-e60bf750b36a",
      "name": "Decision: clear and load database",
      "type": "com.twineworks.tweakstreet.library.steps.decision.decision",
      "data": {
        "meta": {
          "name": "Decision: clear and load database",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputGates": {
          "outputGates": {
            "list": [
              {
                "name": "yes"
              },
              {
                "name": "no"
              }
            ]
          }
        },
        "gate": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "if flow.params.clearAndloadDatabase==true then 'yes' else 'no'",
            "size": {
              "width": 0,
              "height": 36
            },
            "syntax": "tweakflow"
          },
          "code": "if flow.params.clearAndloadDatabase==true then 'yes' else 'no'"
        },
        "editor": {
          "showEntryVariables": false
        },
        "model": {}
      },
      "wirelessInputs": false,
      "pos": {
        "x": 794,
        "y": 170
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.sqlscript_89a87d80-836e-484b-9633-ee5722992d08",
      "name": "SQL Script: empty all tables",
      "type": "com.twineworks.tweakstreet.library.steps.map.sqlscript",
      "data": {
        "meta": {
          "name": "SQL Script: empty all tables",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "connection": {
          "widgetType": "expression/database-ref",
          "widgetData": {
            "name": "sqlite-geonames"
          },
          "code": "::flow.services.`sqlite-geonames`"
        },
        "sql": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": [
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "delete from geoname;",
                      "size": {
                        "width": 0,
                        "height": 36
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'delete from geoname;'"
                  }
                },
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "delete from admindivision;\n",
                      "size": {
                        "width": 0,
                        "height": 36
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'delete from admindivision;\n'"
                  }
                },
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "delete from country;",
                      "size": {
                        "width": 0,
                        "height": 36
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'delete from country;'"
                  }
                },
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "delete from continent;",
                      "size": {
                        "width": 0,
                        "height": 36
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'delete from continent;'"
                  }
                },
                {
                  "value": {
                    "widgetType": "expression/text",
                    "widgetData": {
                      "text": "delete from feature;",
                      "size": {
                        "width": 0,
                        "height": 36
                      },
                      "syntax": "sql",
                      "lineSeparator": "\n",
                      "interpolation": false
                    },
                    "code": "'delete from feature;'"
                  }
                }
              ]
            }
          },
          "code": "['delete from geoname;', 'delete from admindivision;\n', 'delete from country;', 'delete from continent;', 'delete from feature;']"
        },
        "jdbcParams": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "getGeneratedKeys": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "onSqlErrors": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "com.twineworks.tweakstreet.library.steps.map.sqlscript/onSqlErrors",
            "value": "error"
          },
          "code": "'error'"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "wirelessInputs": false,
      "pos": {
        "x": 794,
        "y": 330
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.mkdir_44cedb1e-e139-47f7-b6d7-09a234c5c2a5",
      "name": "Create Folder: data output",
      "type": "com.twineworks.tweakstreet.library.steps.map.mkdir",
      "data": {
        "meta": {
          "name": "Create Folder: data output",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "path": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "flow.vars.dataOutputFolder",
            "size": {
              "width": 0,
              "height": 36
            },
            "syntax": "tweakflow"
          },
          "code": "flow.vars.dataOutputFolder"
        },
        "ifExists": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "com.twineworks.tweakstreet.library.steps.map.mkdir/ifExists",
            "value": "continue"
          },
          "code": "'continue'"
        },
        "editor": {
          "showEntryVariables": false
        },
        "model": {}
      },
      "wirelessInputs": false,
      "pos": {
        "x": 282,
        "y": 170
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.decision.decision_bc7d63a6-24dd-4946-ab6f-9d0f2996d53f",
      "name": "Decision: create csv files",
      "type": "com.twineworks.tweakstreet.library.steps.decision.decision",
      "data": {
        "meta": {
          "name": "Decision: create csv files",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputGates": {
          "outputGates": {
            "list": [
              {
                "name": "yes"
              },
              {
                "name": "no"
              }
            ]
          }
        },
        "gate": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "if flow.params.createCsvFiles==true then 'yes' else 'no'",
            "size": {
              "width": 0,
              "height": 36
            },
            "syntax": "tweakflow"
          },
          "code": "if flow.params.createCsvFiles==true then 'yes' else 'no'"
        },
        "editor": {
          "showEntryVariables": false
        },
        "model": {}
      },
      "wirelessInputs": false,
      "pos": {
        "x": 1098,
        "y": 170
      }
    }
  ],
  "hops": [
    {
      "id": "aa20e4a3-6036-4826-aec8-6d1b50c7d0d4",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.runflow_9a9f1d1e-f53a-4663-8a50-3a28bef6c612",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.runflow_e1b21047-2cee-4113-9758-a9cdcb9665af",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "a56c5690-1b50-49a4-8a40-8daef15f88f9",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.runflow_e1b21047-2cee-4113-9758-a9cdcb9665af",
      "toStep": "com.twineworks.tweakstreet.library.steps.end.finish_35713ec1-af4c-47dc-8d37-196d9c868227",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "f5ce45c8-0f63-4eb4-ae6b-3a86b9bcc6f3",
      "fromStep": "com.twineworks.tweakstreet.library.steps.decision.decision_45679345-687f-446d-bb2b-e60bf750b36a",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.sqlscript_89a87d80-836e-484b-9633-ee5722992d08",
      "fromGate": "yes",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "a6466a34-fd56-468e-96bd-e0606c4f826f",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.sqlscript_89a87d80-836e-484b-9633-ee5722992d08",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.runflow_25f04566-1942-4b79-a471-0666383cd165",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "a8b39ac2-3af9-48bd-9361-572d6caac6d1",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.sqlscript_a8f0f1c7-f156-4094-a011-3be68ae9f6bb",
      "toStep": "com.twineworks.tweakstreet.library.steps.decision.decision_45679345-687f-446d-bb2b-e60bf750b36a",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "677ebb92-031a-402b-a0d6-63d03533d498",
      "fromStep": "start",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.mkdir_44cedb1e-e139-47f7-b6d7-09a234c5c2a5",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "c7368167-4f64-4e59-874b-67c3daff46d6",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.mkdir_44cedb1e-e139-47f7-b6d7-09a234c5c2a5",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.sqlscript_a8f0f1c7-f156-4094-a011-3be68ae9f6bb",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "46c46779-6427-4f87-90c6-e7e12888bb76",
      "fromStep": "com.twineworks.tweakstreet.library.steps.decision.decision_45679345-687f-446d-bb2b-e60bf750b36a",
      "toStep": "com.twineworks.tweakstreet.library.steps.decision.decision_bc7d63a6-24dd-4946-ab6f-9d0f2996d53f",
      "fromGate": "no",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "72a39fb4-2642-4cda-aa93-3920871c49b0",
      "fromStep": "com.twineworks.tweakstreet.library.steps.decision.decision_bc7d63a6-24dd-4946-ab6f-9d0f2996d53f",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.runflow_9a9f1d1e-f53a-4663-8a50-3a28bef6c612",
      "fromGate": "yes",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "42e35d46-7076-4fe7-a0e2-a369595250ba",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.runflow_25f04566-1942-4b79-a471-0666383cd165",
      "toStep": "com.twineworks.tweakstreet.library.steps.decision.decision_bc7d63a6-24dd-4946-ab6f-9d0f2996d53f",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false
    },
    {
      "id": "14555692-9a24-4131-b6ad-e64689a7695d",
      "fromStep": "com.twineworks.tweakstreet.library.steps.decision.decision_bc7d63a6-24dd-4946-ab6f-9d0f2996d53f",
      "toStep": "com.twineworks.tweakstreet.library.steps.end.finish_35713ec1-af4c-47dc-8d37-196d9c868227",
      "fromGate": "no",
      "toGate": "in",
      "disabled": false
    }
  ]
}