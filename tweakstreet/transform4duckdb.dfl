{
  "type": "data-flow",
  "appVersion": "1.21.0",
  "properties": {
    "meta": {
      "comment": {
        "markdown": {
          "text": {
            "text": "",
            "syntax": "markdown",
            "size": {
              "width": "100%",
              "height": "100%"
            }
          },
          "size": {
            "width": null,
            "height": 160
          },
          "view": "edit"
        },
        "editor": {
          "collapsed": true
        }
      },
      "showingComment": true
    },
    "editor": {
      "showParameters": true,
      "showVariables": true,
      "showServices": true,
      "dialogWidth": "wide"
    },
    "imports": {
      "code": "# import the standard library\nimport core, data, strings, time, math, fun, locale, regex, bin, decimals from 'std';\nimport json from 'tweakstreet/json';\n",
      "size": {
        "width": 0,
        "height": 102
      },
      "editor": {
        "collapsed": false
      }
    },
    "parameters": {
      "parameters": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "variables": {
      "variables": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "services": {
      "services": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    }
  },
  "steps": [
    {
      "id": "com.twineworks.tweakstreet.library.steps.input.csvinput_4f63eb4d-d665-4af7-9dda-ae33cbd887c3",
      "name": "CSV Input",
      "type": "com.twineworks.tweakstreet.library.steps.input.csvinput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "CSV Input",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "tabs": {},
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "file": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "${$config.vars.allCountriesFile}",
            "dialogIntent": "openFile"
          },
          "code": "let {\n  string interpolation_0: $config.vars.allCountriesFile;\n}\ninterpolation_0"
        },
        "compression": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/compression",
            "value": "none"
          },
          "code": "'none'"
        },
        "charset": {
          "widgetType": "expression/charset",
          "widgetData": {
            "value": "UTF-8"
          },
          "code": "'UTF-8'"
        },
        "textFileContent": {
          "text": "",
          "fetchButton": {
            "value": "100"
          },
          "size": {
            "width": 0,
            "height": 180
          },
          "editor": {
            "collapsed": true
          }
        },
        "skipLines": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "0"
          },
          "code": "0"
        },
        "rowLimit": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": ""
          },
          "code": "nil"
        },
        "fieldSeparator": {
          "widgetType": "expression/separator",
          "widgetData": {
            "value": "tab"
          },
          "code": "\"\\t\""
        },
        "fieldEncloser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": ""
          },
          "code": "''"
        },
        "hasHeaderLine": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "readFields": {
          "readFields": {
            "list": [
              {
                "name": "geonameid",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "0"
                  },
                  "code": "0"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "name",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "1"
                  },
                  "code": "1"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "asciiname",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "2"
                  },
                  "code": "2"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "alternatenames",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "3"
                  },
                  "code": "3"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "latitude",
                "type": "double",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "4"
                  },
                  "code": "4"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "longitude",
                "type": "double",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "5"
                  },
                  "code": "5"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "feature_class",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "6"
                  },
                  "code": "6"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "feature_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "7"
                  },
                  "code": "7"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "country_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "8"
                  },
                  "code": "8"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "cc2",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "9"
                  },
                  "code": "9"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "admin1_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "10"
                  },
                  "code": "10"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "admin2_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "11"
                  },
                  "code": "11"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "admin3_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "12"
                  },
                  "code": "12"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "admin4_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "13"
                  },
                  "code": "13"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "population",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "14"
                  },
                  "code": "14"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "elevation",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "15"
                  },
                  "code": "15"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "dem",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "16"
                  },
                  "code": "16"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "timezone",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "17"
                  },
                  "code": "17"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "modification_date",
                "type": "datetime",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "18"
                  },
                  "code": "18"
                },
                "conversion": {
                  "widgetType": "expression/parse-datetime",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/datetime-pattern",
                      "widgetData": {
                        "value": "uuuu-MM-dd"
                      },
                      "code": "'uuuu-MM-dd'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "defaultTz": {
                      "widgetType": "expression/timezone",
                      "widgetData": {
                        "value": "Europe/Berlin"
                      },
                      "code": "'Europe/Berlin'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, string default_tz, boolean trim, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$datetime_parser'};\n}\nmake_parser('uuuu-MM-dd', 'en-US', 'Europe/Berlin', true, '')\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 362,
        "y": 202
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.calculator_217804ca-6da2-44ff-b436-9360a4456a16",
      "name": "Calculator",
      "type": "com.twineworks.tweakstreet.library.steps.map.calculator",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Calculator",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": [
              {
                "name": "alternatenamesCleaned1",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "strings.replace(in.alternatenames,\"'\",\"`\")",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "strings.replace(in.alternatenames,\"'\",\"`\")"
                }
              },
              {
                "name": "alternatenamesCleaned2",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "strings.replace(alternatenamesCleaned1,\"[\",\"-\")",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "strings.replace(alternatenamesCleaned1,\"[\",\"-\")"
                }
              },
              {
                "name": "alternatenamesCleaned3",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "strings.replace(alternatenamesCleaned2,\"]\",\"-\")",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "strings.replace(alternatenamesCleaned2,\"]\",\"-\")"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "alternatenames",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "\"[\" .. entry_vars.alternatenamesCleaned3 .. \"]\"",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "\"[\" .. entry_vars.alternatenamesCleaned3 .. \"]\""
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": true,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 682,
        "y": 202
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput_21f5367c-5f62-4df6-932f-61d66c52565e",
      "name": "CSV Output",
      "type": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "CSV Output",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "file": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "${$config.vars.allCountriesFileDuckdb}",
            "dialogIntent": "saveFile"
          },
          "code": "let {\n  string interpolation_0: $config.vars.allCountriesFileDuckdb;\n}\ninterpolation_0"
        },
        "charset": {
          "widgetType": "expression/charset",
          "widgetData": {
            "value": "UTF-8"
          },
          "code": "'UTF-8'"
        },
        "compression": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/compression",
            "value": "none"
          },
          "code": "'none'"
        },
        "fieldSeparator": {
          "widgetType": "expression/separator",
          "widgetData": {
            "value": "tab"
          },
          "code": "\"\\t\""
        },
        "fieldEncloser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": ""
          },
          "code": "''"
        },
        "lineEndings": {
          "widgetType": "expression/line-ending",
          "widgetData": {
            "value": "unix"
          },
          "code": "\"\\n\""
        },
        "writeHeaderLine": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "whenFileExists": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput/whenFileExists",
            "value": "truncate"
          },
          "code": "'truncate'"
        },
        "fieldMode": {
          "value": "fixed"
        },
        "stringWriteFields": {
          "stringWriteFields": {
            "list": [
              {
                "name": "geonameid",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "geonameid"
                      }
                    }
                  },
                  "code": "::in.geonameid"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "name",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "name"
                      }
                    }
                  },
                  "code": "::in.name"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "asciiname",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "asciiname"
                      }
                    }
                  },
                  "code": "::in.asciiname"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "alternatenames",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "alternatenames"
                      }
                    }
                  },
                  "code": "::in.alternatenames"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "latitude",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "latitude"
                      }
                    }
                  },
                  "code": "::in.latitude"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0.#"
                      },
                      "code": "'0.#'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.#', 'en-US', '')\n"
                }
              },
              {
                "name": "longitude",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "longitude"
                      }
                    }
                  },
                  "code": "::in.longitude"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0.#"
                      },
                      "code": "'0.#'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.#', 'en-US', '')\n"
                }
              },
              {
                "name": "feature_class",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "feature_class"
                      }
                    }
                  },
                  "code": "::in.feature_class"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "feature_code",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "feature_code"
                      }
                    }
                  },
                  "code": "::in.feature_code"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "country_code",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "country_code"
                      }
                    }
                  },
                  "code": "::in.country_code"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "cc2",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "cc2"
                      }
                    }
                  },
                  "code": "::in.cc2"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "admin1_code",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "admin1_code"
                      }
                    }
                  },
                  "code": "::in.admin1_code"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "admin2_code",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "admin2_code"
                      }
                    }
                  },
                  "code": "::in.admin2_code"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "admin3_code",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "admin3_code"
                      }
                    }
                  },
                  "code": "::in.admin3_code"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "admin4_code",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "admin4_code"
                      }
                    }
                  },
                  "code": "::in.admin4_code"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "population",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "population"
                      }
                    }
                  },
                  "code": "::in.population"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "elevation",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "elevation"
                      }
                    }
                  },
                  "code": "::in.elevation"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "dem",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "dem"
                      }
                    }
                  },
                  "code": "::in.dem"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "timezone",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "timezone"
                      }
                    }
                  },
                  "code": "::in.timezone"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "modification_date",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "modification_date"
                      }
                    }
                  },
                  "code": "::in.modification_date"
                },
                "formatter": {
                  "widgetType": "expression/format-datetime",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/datetime-pattern",
                      "widgetData": {
                        "value": "uuuu-MM-dd"
                      },
                      "code": "'uuuu-MM-dd'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$datetime_formatter'};\n}\nmake_formatter('uuuu-MM-dd', 'en-US', '')\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "dataDrivenColumns": {
          "widgetType": "expression/data-grid",
          "widgetData": {
            "fields": [
              {
                "id": "name",
                "name": "name"
              }
            ],
            "gen": {
              "as": "rows",
              "of": "dict",
              "meta": false
            },
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "dataDrivenValues": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showStringWriteFields": true,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 1002,
        "y": 202
      }
    }
  ],
  "hops": [
    {
      "id": "e06d4f19-2b79-43d0-bf9c-b9d21c6ebcb6",
      "fromStep": "com.twineworks.tweakstreet.library.steps.input.csvinput_4f63eb4d-d665-4af7-9dda-ae33cbd887c3",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.calculator_217804ca-6da2-44ff-b436-9360a4456a16",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "b26566ef-c3de-43dc-86b2-00ee72f074aa",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.calculator_217804ca-6da2-44ff-b436-9360a4456a16",
      "toStep": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput_21f5367c-5f62-4df6-932f-61d66c52565e",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    }
  ]
}